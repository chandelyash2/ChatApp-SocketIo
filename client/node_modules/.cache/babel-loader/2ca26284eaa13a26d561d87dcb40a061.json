{"ast":null,"code":"var _jsxFileName = \"/home/codedrill/Desktop/xda/chatapp/client/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  name,\n  roomId,\n  socket\n}) {\n  _s();\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  console.log(name);\n  console.log(roomId);\n\n  const sendMessage = async e => {\n    if (currentMessage !== \"\") {\n      const messageDtaa = {\n        author: name,\n        room: roomId,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageDtaa);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"recieve_message\", data => {\n      console.log(data);\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: [messageList.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            margin: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: list.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              color: \"gray\",\n              margin: \"12px\",\n              boxShadow: \"rgb(17 121 87 / 83%) 0px 3px 8px\",\n              width: \"auto\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginLeft: \"18px\"\n              },\n              children: list.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: list.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"enter a message\",\n          type: \"text\",\n          onChange: e => setCurrentMessage(e.target.value),\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            marginTop: \"18px\",\n            textAlign: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            marginTop: \"18px\",\n            marginBottom: \"18px\",\n            color: \"black\",\n            backgroundColor: \"beige\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/codedrill/Desktop/xda/chatapp/client/src/Chat.js"],"names":["React","useState","useEffect","Chat","name","roomId","socket","currentMessage","setCurrentMessage","messageList","setMessageList","console","log","sendMessage","e","messageDtaa","author","room","message","time","Date","now","getHours","getMinutes","emit","on","data","list","map","display","margin","flexDirection","color","boxShadow","width","marginLeft","target","value","height","marginTop","textAlign","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nfunction Chat({ name, roomId, socket }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  console.log(name);\n  console.log(roomId);\n  const sendMessage = async (e) => {\n    if (currentMessage !== \"\") {\n      const messageDtaa = {\n        author: name,\n        room: roomId,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n      await socket.emit(\"send_message\", messageDtaa);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"recieve_message\", (data) => {\n      console.log(data);\n      setMessageList((list) => [...list, data]);\n    });\n  }, [socket]);\n  return (\n    <div>\n      <h3>Live Chat</h3>\n      <div className=\"chat_body\">\n        {messageList.map((list) => {\n          return (\n            <div style={{ display: \"flex\", margin: \"1rem\" }}>\n              <h4>{list.author}</h4>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  color: \"gray\",\n                  margin: \"12px\",\n                  boxShadow: \"rgb(17 121 87 / 83%) 0px 3px 8px\",\n                  width: \"auto\",\n                }}\n              >\n                <p style={{ marginLeft: \"18px\" }}>{list.message}</p>\n                <p style={{ marginLeft: \"10px\" }}>{list.time}</p>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"chat_content\">\n          <input\n            placeholder=\"enter a message\"\n            type=\"text\"\n            onChange={(e) => setCurrentMessage(e.target.value)}\n            style={{\n              width: \"300px\",\n              height: \"40px\",\n              marginTop: \"18px\",\n              textAlign: \"center\",\n            }}\n          />\n          <button\n            onClick={sendMessage}\n            style={{\n              width: \"300px\",\n              height: \"40px\",\n              marginTop: \"18px\",\n              marginBottom: \"18px\",\n              color: \"black\",\n              backgroundColor: \"beige\",\n            }}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}