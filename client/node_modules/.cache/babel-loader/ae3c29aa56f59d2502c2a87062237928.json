{"ast":null,"code":"var _jsxFileName = \"/home/codedrill/Desktop/xda/chatapp/client/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  userName,\n  roomId,\n  socket\n}) {\n  _s();\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageDtaa = {\n        author: userName,\n        room: roomId,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageDtaa);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"recieve_message\", data => {\n      console.log(data);\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: [messageList.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            margin: ''\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: list.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: list.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"enter a message\",\n          type: \"text\",\n          onChange: e => setCurrentMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"hvRFBzdscSMy6DcgUaovDwROh/c=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/codedrill/Desktop/xda/chatapp/client/src/Chat.js"],"names":["React","useState","useEffect","Chat","userName","roomId","socket","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageDtaa","author","room","message","time","Date","now","getHours","getMinutes","emit","on","data","console","log","list","map","display","flexDirection","width","margin","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,WAAP;;;AACA,SAASC,IAAT,CAAc;AAACC,EAAAA,QAAD;AAAUC,EAAAA,MAAV;AAAiBC,EAAAA;AAAjB,CAAd,EAAwC;AAAA;;AACxC,QAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAqCP,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACQ,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;;AACA,QAAMU,WAAW,GAAE,YAAS;AAC1B,QAAGJ,cAAc,KAAG,EAApB,EAAuB;AACrB,YAAMK,WAAW,GAAC;AAChBC,QAAAA,MAAM,EAACT,QADS;AAEhBU,QAAAA,IAAI,EAACT,MAFW;AAGhBU,QAAAA,OAAO,EAACR,cAHQ;AAIhBS,QAAAA,IAAI,EAAC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KAAkC,GAAlC,GAAuC,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;AAJ5B,OAAlB;AAMJ,YAAMd,MAAM,CAACe,IAAP,CAAY,cAAZ,EAA2BT,WAA3B,CAAN;AACG;AACF,GAVD;;AAWAV,EAAAA,SAAS,CAAC,MAAI;AACdI,IAAAA,MAAM,CAACgB,EAAP,CAAU,iBAAV,EAA6BC,IAAD,IAAQ;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACFb,MAAAA,cAAc,CAAEgB,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAASH,IAAT,CAAT,CAAd;AACC,KAHD;AAIC,GALQ,EAKP,CAACjB,MAAD,CALO,CAAT;AAME,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBAEIG,WAAW,CAACkB,GAAZ,CAAiBD,IAAD,IAAQ;AACtB,4BACE;AAAK,UAAA,KAAK,EAAE;AAACE,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,aAAa,EAAC,KAA9B;AAAoCC,YAAAA,KAAK,EAAC,MAA1C;AAAmDC,YAAAA,MAAM,EAAC;AAA1D,WAAZ;AAAA,kCAEG;AAAA,sBAAKL,IAAI,CAACX;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAA,sBAAKW,IAAI,CAACV;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD,CAFJ,eAaE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAO,UAAA,WAAW,EAAC,iBAAnB;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,QAAQ,EAAGgB,CAAD,IAAKxB,iBAAiB,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAEvB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7CQR,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport './App.css'\nfunction Chat({userName,roomId,socket}) {\nconst [currentMessage,setCurrentMessage] = useState(\"\")\nconst [messageList,setMessageList] = useState([])\nconst sendMessage =async()=>{\n  if(currentMessage!==\"\"){\n    const messageDtaa={\n      author:userName,\n      room:roomId,\n      message:currentMessage,\n      time:new Date(Date.now()).getHours() + \":\"+ new Date(Date.now()).getMinutes()\n    }\nawait socket.emit(\"send_message\",messageDtaa)\n  }\n}\nuseEffect(()=>{\nsocket.on(\"recieve_message\",(data)=>{\n  console.log(data)\nsetMessageList((list)=>[...list,data])\n})\n},[socket])\n  return (\n    <div>\n      <h3>Live Chat</h3>\n      <div className='chat_body'>\n        {\n          messageList.map((list)=>{\n            return(\n              <div style={{display:'flex',flexDirection:'row',width:'100%' , margin:''}}>\n                \n                 <h2>{list.message}</h2>\n                 <h4>{list.time}</h4>\n              </div>\n             \n            )\n          })\n        }\n        <div className='chat_content'>\n        <input placeholder='enter a message' type='text' onChange={(e)=>setCurrentMessage(e.target.value)}/>\n        <button onClick={sendMessage}>Send</button>\n        </div>\n        \n      </div>\n      \n    </div>\n  )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}